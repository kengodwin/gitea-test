name: Gitea Actions Demo v2
run-name: ${{ gitea.actor }} is testing out Gitea Actions üöÄ
on: [push]

jobs:
  Explore-Gitea-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: apt-get update
      - run: apt-get install -y php-cli php-json php-mbstring php-xml php-pcov php-xdebug
      - run: |
         php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"; \
         php -r "if (hash_file('sha384', 'composer-setup.php') === 'e21205b207c3ff031906575712edab6f13eb0b361f2085f1f1237b7126d785e826a450292b6cfd1d64d92e6563bbde02') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"; \
         php composer-setup.php; \
         php -r "unlink('composer-setup.php');"; \
      - run: mv composer.phar /usr/bin/composer; chmod +x /usr/bin/composer
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ gitea.repository }} repository has been cloned to the runner."
      - run: composer require --dev phpunit/phpunit ^10
      - run: ./vendor/bin/phpunit --version
      - run: composer require --working-dir=tools/php-cs-fixer friendsofphp/php-cs-fixer
      - run: echo "üéâ The job was automatically triggered by a ${{ gitea.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by Gitea!"
      - run: echo "üîé The name of your branch is ${{ gitea.ref }} and your repository is ${{ gitea.repository }}."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ gitea.workspace }}
      - name: Run php unit tests
        run: ./vendor/bin/phpunit --testdox tests
      - name: Run php-cs-fixer
        run: tools/php-cs-fixer/vendor/bin/php-cs-fixer fix src
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
         commit_message: Apply php-cs-fixer changes
      - run: echo "üçè This job's status is ${{ job.status }}."
      - name: Notify chatops
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
         webhook: ${{ secrets.DISCORD_WEBHOOK }}
         status: ${{ job.status }}
         title: "Gitea actions demo.yaml completed"
         description: "Test notification"
         username: Gitea Actions
         avatar_url: ${{ secrets.AVATAR_URL }}
